{"version":3,"sources":["components/Navbar.js","components/Splash.js","components/Portfolio.js","components/DonutChart.js","actions/portfolio_actions.js","actions/plan_actions.js","components/PlansMain.js","components/UserCurrent.js","App.js","components/Root.js","reducers/portfolios_reducer.js","reducers/plans_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["Nav","props","useState","contactDropdown","toggleContactDropdown","clickLink","setClickLink","id","to","className","type","onClick","onBlur","href","target","rel","onMouseDown","onMouseUp","Splash","Portfolio","plans","tableHeaders","Object","keys","map","col","idx","rowObject","e","plan","Array","from","currentTarget","parentNode","children","node","classList","remove","add","selectPlan","header","subIdx","DonutChart","data","categories","filter","ctg","options","chart","renderTo","title","text","plotOptions","pie","colors","allowPointSelect","cursor","dataLabels","enabled","pointFormat","distance","property","operator","value","size","center","series","name","key","y","parseInt","innerSize","tooltip","headerFormat","highcharts","Highcharts","containerProps","style","height","RECEIVE_PORTFOLIO","grabPortfolios","dispatch","Papa","parse","download","complete","res","portfolio","error","err","console","log","RECEIVE_PLAN","UNSELECT_PLAN","CLEAR_PLANS","PlansMain","useDispatch","portfolios","useSelector","state","entities","donutPresent","length","useEffect","donut","charts","reflow","chosenPlans","receivePlan","UserInfo","currPlan","headers","hdrs","userPortfolio","setUserPortfolio","inputErrors","setInputErrors","recPortfolio","setRecPortfolio","recTransfers","setRecTransfers","_modBSearch","arr","mid","left","right","Math","floor","stateVars","forEach","onSubmit","preventDefault","values","some","ele","largestNeg","total","reduce","subTotal","float","parseFloat","makeRecPortfolio","recTrans","lessThanRec","moreThanRec","offAmounts","round","Number","EPSILON","setNumber","push","inputArr","i","j","_insertionSort","_findLargestNeg","posOffAmounts","slice","negOffAmounts","current","abs","matchIndex","concat","amt","recommendText","subArr","owed","excess","singleAcct","pop","oweAmt","excessAmt","currExcess","currOwed","currExcessAcct","currOwedAcct","deduct","min","recDiff","color","arrow","category","ctgErr","htmlFor","onChange","tempErrors","assign","entered","split","isNaN","join","newState","toFixed","App","exact","path","component","UserCurrent","Root","store","portfoliosReducer","action","freeze","plansReducer","entitiesReducer","combineReducers","rootReducer","middlewares","thunk","logger","require","preloadedState","createStore","applyMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba5f59ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../stylesheets/navbar.css';\n\nfunction Nav(props) {\n  const [contactDropdown, toggleContactDropdown] = useState(false);\n  const [clickLink, setClickLink] = useState(false);\n\n  return (\n    <nav id=\"navbar\">\n      <Link to=\"/plans\"><i className=\"far fa-lightbulb\"></i>BRIGHTER PLANNING</Link>\n      <div className=\"nav-contact-wrapper\">\n        <button type=\"button\" \n          className=\"nav-contact-button\"\n          onClick={() => toggleContactDropdown(true)} \n          onBlur={() => {\n            if (!clickLink) toggleContactDropdown(false); \n          }}\n        >Contact Us</button>\n        { contactDropdown ? \n          <div className=\"nav-contact\">\n            <p>Keely Lee</p>\n            <a href=\"mailto:keely_lee@outlook.com\" ><i className=\"fas fa-paper-plane\"></i>keely_lee@outlook.com</a>\n            <div className=\"nav-contact-links\">\n              <a href=\"https://www.linkedin.com/in/keely-lee1/\" className=\"linkedin\" target=\"_blank\" rel=\"noreferrer\" onMouseDown={() => setClickLink(true)} onMouseUp={() => setClickLink(false)}><i className=\"fab fa-linkedin\"></i></a>\n              <a href=\"https://github.com/keely-lee\" className=\"github\" target=\"_blank\" rel=\"noreferrer\" onMouseDown={() => setClickLink(true)} onMouseUp={() => setClickLink(false)}><i className=\"fab fa-github\"></i></a>\n              <a href=\"https://angel.co/u/keely-lee\" className=\"angellist\" target=\"_blank\" rel=\"noreferrer\" onMouseDown={() => setClickLink(true)} onMouseUp={() => setClickLink(false)}><i className=\"fab fa-angellist\"></i></a>\n              <a href=\"https://keely-lee.github.io/\" className=\"personal\" target=\"_blank\" rel=\"noreferrer\" onMouseDown={() => setClickLink(true)} onMouseUp={() => setClickLink(false)}><i className=\"fas fa-user-circle\"></i></a>\n            </div>\n          </div>\n        : null }\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav;\n\n// CHANGE CONTACT DIV TO A SLIDE FROM RIGHT TO LEFT ON THE NAV. SETSTATE WILL TOGGLE CLASSNAME FOR VISIBILITY","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../stylesheets/splash.css';\n\nfunction Splash() {\n\n  return (\n    <div className=\"splash-main-div\">\n      <h1>Plan a Brighter Financial Future</h1>\n      <div id=\"splash-img\"><Link to=\"/plans\">Get Started Today</Link></div>\n      {/* PUT A FOOTER */}\n    </div>\n  )\n}\n\nexport default Splash;","import React from 'react';\n\nimport '../stylesheets/portfolios.css';\n\nfunction Portfolio(props) {\n  const plans = props.plans;\n  const tableHeaders = plans ? Object.keys(plans[0]) : null;\n\n  function selectPlan(e, plan) {\n    Array.from(e.currentTarget.parentNode.children).map(node => node.classList.remove(\"selected\"))\n    e.currentTarget.classList.add(\"selected\")\n    props.selectPlan(plan);\n  }\n\n\n  return (\n    <div className=\"plans-table-div\">\n      <h1>Explore Portfolio Plans</h1>\n\n      { tableHeaders ? \n        <table>\n          <tbody>\n            <tr key=\"plans-row-th\">\n              { tableHeaders.map((col, idx) => <th key={`th-${idx}`}>{col} {idx === 0 ? \"\" : \"%\" }</th>) }\n            </tr>\n            \n            {/* Consider better iterations, heavy runtime. Current priority accurate data. */}\n            { plans.map((rowObject, idx) => {\n              return (\n                <tr className={`plans-row-${idx} plans-row`} \n                  key={`tr-${idx}`}\n                  onClick={(e) => selectPlan(e, rowObject)}>\n                  { tableHeaders.map((header,subIdx) => {\n                    return <td key={`td-${idx}-${subIdx}`}>{rowObject[header]}</td>\n                  }) }\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      : null }\n    </div>\n  )\n}\n\nexport default Portfolio;","import React from 'react';\n\nimport Highcharts, { Point } from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nfunction DonutChart(props) {\n  const data = props.data; //Note: Object keys - 'Risk' is a key. \n  const colors = ['#555B6E', '#89B0AE', '#BEE3DB', '#FFD6BA', '#E89C87'];\n\n  // DONUT CHART PLANS #6 //////\n\n  const categories = data ? Object.keys(data).filter(ctg => ctg !== 'Risk') : [];\n\n  const options = data ? {\n    chart: {\n      type: 'pie',\n      renderTo: 'container',\n    },\n    title: {\n      text: `Risk Plan ${data ? data['Risk'] : \"\"}`,\n    },\n    plotOptions: {\n      pie: {\n        // shadow: true,\n        colors: colors,\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          pointFormat: '<b>{point.plan}</b><br>{point.y}%',\n          distance: -50,\n          filter: {\n            property: 'percentage',\n            operator: '>',\n            value: 1\n          },\n        },\n        size: '85%',\n        center: ['50%', '40%'],\n      }\n    },\n    // yAxis: {\n    //   title: {\n    //     text: 'Y-AXIS'\n    //   }\n    // },\n    series: [\n      {\n        name: \"Plan\",\n        data: categories.map(key => { return {plan: key, y: parseInt(data[key])} }),\n        innerSize: '30%',\n      }\n    ],\n    tooltip: {\n      headerFormat: '<b>{point.plan}</b>',\n      pointFormat: '<b>{point.percentage}%</b>'\n    },\n    // credits: {\n    //   enabled: false\n    // }\n  } : null;\n\n  return (\n    // categories\n    <div className=\"donut-chart-div\">\n      { data ? \n        <HighchartsReact \n          highcharts={Highcharts} \n          options={options}      \n          containerProps={{style: {height: '100%',} }} // width: '50vw'} }}\n        />\n      : null }\n    </div>\n  );\n}\n\nexport default DonutChart;","// import axios from 'axios';\nimport Papa from 'papaparse';\n\nexport const RECEIVE_PORTFOLIO = 'RECEIVE_PORTFOLIO';\n\nexport const receivePortfolio = portfolio => ({\n  type: RECEIVE_PORTFOLIO,\n  portfolio\n});\n\nexport const grabPortfolios = () => dispatch => {\n  return Papa.parse(\n    'https://docs.google.com/spreadsheets/d/e/2PACX-1vSrmOiZN0aKz30NrPibeQ_LOlaDcYmNWwnkqNMNgI0aQF1qx9tLDtNFlfnDuZIn8BeYC2AILkPohMWr/pub?output=csv', \n    { \n      download: true,\n      header: true,\n      complete: res => dispatch(receivePortfolio(res)),\n      error: err => console.log(err)\n    }\n  )\n}\n\n// export const grabPortfolios = () => dispatch => {\n//   return axios.get('https://docs.google.com/spreadsheets/d/e/2PACX-1vSrmOiZN0aKz30NrPibeQ_LOlaDcYmNWwnkqNMNgI0aQF1qx9tLDtNFlfnDuZIn8BeYC2AILkPohMWr/pub?output=csv')\n//     .then(res => dispatch(receivePortfolio(res)))\n//     .catch(err => console.log(err))\n//   }","export const RECEIVE_PLAN = 'RECEIVE_PLAN';\nexport const RECEIVE_PLANS = 'RECEIVE_PLANS';\nexport const UNSELECT_PLAN = 'UNSELECT_PLAN';\nexport const CLEAR_PLANS = 'CLEAR_PLANS';\n\nexport const receivePlan = plan => ({\n  type: RECEIVE_PLAN,\n  plan\n})\n\n// export const receivePlans = plan => ({\n//   type: RECEIVE_PLANS,\n//   plan\n// })\n\nexport const unselectPlan = plan => ({\n  type: UNSELECT_PLAN,\n  plan\n})\n\nexport const clearPlans = () => ({\n  type: CLEAR_PLANS\n})","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Highcharts from 'highcharts';\n\nimport Portfolio from './Portfolio';\nimport DonutChart from './DonutChart';\n\nimport { grabPortfolios } from '../actions/portfolio_actions';\nimport { receivePlan } from '../actions/plan_actions';\n\nimport '../stylesheets/plansMain.css';\n\nfunction PlansMain(props) {\n  const dispatch = useDispatch();\n  const portfolios = useSelector(state => state.entities.portfolios.data)\n  const data = useSelector(state => state.entities.plans);\n\n  const donutPresent = data.length === 1 ? \"plans-split\" : \"\";\n\n  useEffect(() => {\n      dispatch(grabPortfolios());\n  }, []) //dispatch on initial mount\n\n  useEffect(() => {\n    const donut = data.length === 1 ? Highcharts.charts[Highcharts.charts.length-1] : \"\";\n    if (donut) donut.reflow();\n  }, [data.length])\n\n\n  return (\n    <div className=\"plans-main-div\">\n      <div className=\"label-header\">\n        <span>Select A Risk Plan</span>\n        { data.length ? <Link to=\"/personalize\">Calculate</Link> : null }\n      </div>\n      <div className={`plans-main-base ${donutPresent}`}>\n        <Portfolio \n          plans={portfolios} \n          chosenPlans={data}\n          selectPlan={(plan) => { dispatch(receivePlan(plan)) }}\n          // eventually add dispatch multiple plans\n        />\n\n        {/* eventually some button for compare options */}\n      </div>\n      <div className=\"plans-main-charts\">\n        { data.length === 1 ? <DonutChart data={data[0]}/> : null }\n      </div>\n    </div>\n  )\n}\n\nexport default PlansMain; \n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport '../stylesheets/userCurrent.css';\n\nfunction UserInfo() {\n  const currPlan = useSelector(state => state.entities.plans)[0];\n  const headers = currPlan ? Object.keys(currPlan).filter(hdrs => hdrs !== \"Risk\"): [];\n\n  // consider storing user's (valid entries) portfolio to store\n  const [ userPortfolio, setUserPortfolio ] = useState({});\n  const [ inputErrors, setInputErrors ] = useState({}); //modifying a set repeatedly will likely be costly\n\n  const [ recPortfolio, setRecPortfolio ] = useState({});\n  const [ recTransfers, setRecTransfers ] = useState([]);  \n\n\n  // componentDidMount - set base for user's info & recommended info\n  useEffect(() => {\n    const stateVars = {};\n    headers.forEach(ctg => {\n      stateVars[ctg] = 0.0;\n    })\n    setUserPortfolio(stateVars);\n  }, [])\n\n  function updateAmount(category) {\n    return e => {\n      //figure out regex solution if you have time\n      // const entered = e.currentTarget.value.replace(/,/g, \"\"); \n\n      //when potentially fixing error, clear the error\n      if ( inputErrors[category] ) {\n        const tempErrors = Object.assign({}, inputErrors);\n        delete tempErrors[category];\n        setInputErrors(tempErrors);\n      }\n\n      let entered = e.currentTarget.value.split(\".\");\n\n      //checks for valid number entered: max two decimal places, adjust for $ sign. Use better validity checks!!  //if length of decimal is more than 2, must be === 0 or parseFloat will make length less than 2 (meaning 0s only after 2nd decimal)\n      if (entered.length > 2) return setInputErrors(Object.assign({}, inputErrors, { [category]: true })) //consider using a set for errors\n      if (entered.length === 2) {\n        if(entered[1].length > 2 || (isNaN(entered[1]) && entered[1] !== \"\")) return setInputErrors(Object.assign({}, inputErrors, { [category]: true }))\n      };\n\n      if (entered[0][0] === \"$\") entered[0] = entered[0].slice(1);\n      \n      // check validity: appropriate commas\n      for (let i = entered[0].length-4; i > 0; i-=4) { \n        if (entered[0][i] === \",\") entered[0] = entered[0].slice(0, i) + entered[0].slice(i+1); \n        else break;\n      }\n\n      if (entered.join(\".\") === \"\") {\n        setUserPortfolio(Object.assign({}, userPortfolio, {[category]: 0.0}));\n      } else if (!isNaN(entered.join(\".\"))){\n        const newState = Object.assign({}, userPortfolio);\n        newState[category] = parseFloat(entered.join(\".\"));\n        setUserPortfolio(newState);\n      } else {\n        setInputErrors(Object.assign({}, inputErrors, { [category]: true }))\n      }\n    }\n  }\n\n  function confirmValid() {\n    // confirm no errors, confirm at least one entry entered\n    if (Object.keys(inputErrors).length || !Object.values(userPortfolio).some(ele => ele)) return false;\n    else return true;\n  }\n\n  // insertionSort (quicker sort for small sized array)\n  function _insertionSort (inputArr) {\n    let length = inputArr.length;\n    for (let i = 1; i < length; i++) {\n      let key = inputArr[i];\n      let j = i-1;\n      while (j >= 0 && inputArr[j] > key) {\n        inputArr[j+1] = inputArr[j];\n        j = j-1;\n      }\n      inputArr[j+1] = key;\n    }\n    return inputArr;\n  }\n\n  //find subset of sums\n  let sums = {}; //key:val => {length of smallest combo: array of subarray sums} \n  function _subsetSum(arr, target, partial = [], sum = 0, fixIdx = 0) { \n    if (sum < target) {\n      arr.forEach((num, i) => {\n        _subsetSum(arr.slice(i + 1), target, partial.concat([i + fixIdx]), sum + num, i+1)\n      })\n    }\n    else if (sum === target) {\n      fixIdx = 0;\n      if (sums[partial.length]) sums[partial.length].push(partial);\n      else sums[partial.length] = [partial];\n    }\n    else fixIdx = 0;\n  }\n\n  //returns matching index or index of last element less than target\n  function _modBSearch(arr, target) {\n    if (target < arr[0]) return -1; //used to avoid split transfers until necessary\n    if (target > arr[arr.length-1]) return arr.length-1;\n\n    let mid;\n    let left = 0;\n    let right = arr.length;\n    \n    while (left < right) {\n      mid = Math.floor((left + right)/2);\n      if (arr[mid] === target) return mid;\n      if (arr[mid] < target) left = mid+1;\n      else right = mid;\n    }\n\n    return -1;  //temporary fix until modbsearch fixed. target not in array\n    // return mid;\n  } \n\n  // FIX THIS LATER TO A BETTER SEARCH\n  function _findLargestNeg(arr) {\n    let left = 0;\n    let right = arr.length-1;\n    let mid;\n\n    while (left < right) {\n      mid = Math.floor((left + right)/2);\n\n      if (arr[mid] < 0 && arr[mid+1] > 0) return mid;\n      if (arr[mid] > 0) right = mid;\n      else if (arr[mid] < 0 && arr[mid+1] < 0) left = mid;\n    }\n  }\n\n    // const permutator = (inputArr) => {\n    //   let result = [];\n\n    //   const permute = (arr, m = []) => {\n    //     if (arr.length === 0) {\n    //       result.push(m)\n    //     } else {\n    //       for (let i = 0; i < arr.length; i++) {\n    //         let curr = arr.slice();\n    //         let next = curr.splice(i, 1);\n    //         permute(curr.slice(), m.concat(next))\n    //       }\n    //     }\n    //   }\n\n    //   permute(inputArr)\n    //   return result;\n    // }\n\n\n  function calculate(e) {\n    e.preventDefault();\n\n    if (confirmValid()) {\n      // Research accounting concepts\n\n      //Establish recommended portfolio based on user input\n      const total = Object.values(userPortfolio).reduce((subTotal, float) => {\n        if (float) return subTotal + parseFloat(float);\n        else return subTotal;\n      }, 0.0)\n\n      const makeRecPortfolio = {};\n      const recTrans = []; //Array of subarrays. \n        //First element of subarray = amount needed from fund(s); if int, matching subset of excess accounts; if array, partial transfers needed. \n        //Second element of subarray = excess amts; if int, matching subset of below value accts; if array, partial transfers needed.\n\n      // variables to be used for referencing which categories transfers will come from\n      const lessThanRec = {}; //key/value => amount needed: category      ---> none of these categories should transfer out\n      const moreThanRec = {}; //key/value => amount extra: category\n\n      let offAmounts = []; //To be sorted array of all amounts needed and excess\n      let largestNeg; //To be largest negative value (for quicker slicing & stop points)\n\n      // Determine \"offAmounts\". Set values to amounts short/in excess and log accounts\n      headers.forEach(ctg => {\n        makeRecPortfolio[ctg] = Math.round(((parseInt(currPlan[ctg])/100 * total) + Number.EPSILON) * 100) / 100; //review this calculation for simplification\n        if (makeRecPortfolio[ctg] === userPortfolio[ctg]) return; //no transfers needed\n\n        if (makeRecPortfolio[ctg] > userPortfolio[ctg]) {\n          const setNumber = Math.round((makeRecPortfolio[ctg] - userPortfolio[ctg] + Number.EPSILON) * 100) / 100;\n          if (lessThanRec[setNumber]) lessThanRec[setNumber].push(ctg);\n          else lessThanRec[setNumber] = [ctg];\n          offAmounts.push(setNumber * -1); \n        }\n        else {\n          const setNumber = Math.round((userPortfolio[ctg] - makeRecPortfolio[ctg] + Number.EPSILON) * 100) / 100;\n          if (moreThanRec[setNumber]) moreThanRec[setNumber].push(ctg);\n          else moreThanRec[setNumber] = [ctg];\n          offAmounts.push(setNumber);\n        }\n      })\n      setRecPortfolio(makeRecPortfolio);\n\n      if (!Object.keys(moreThanRec).length) return setRecTransfers([\"No transfers needed, your portfolio is optimal!\"]); //no transfers needed - portfolio matches recommended plan\n\n      _insertionSort(offAmounts); //sort off amounts\n      largestNeg = _findLargestNeg(offAmounts); //initial declaration of largest negative\n      // largestNeg = _modBSearch(offAmounts, 0); //initial declaration of largest negative\n\n      let posOffAmounts = offAmounts.slice(largestNeg+1); //avoid constant slicing if unnecessary\n      let negOffAmounts = offAmounts.slice(0, largestNeg+1);\n      \n      // first grab any matching differences\n      for (let i = 0; i <= largestNeg; i++) {\n        const current = Math.abs(offAmounts[i]);\n        const matchIndex = _modBSearch(posOffAmounts, current) + largestNeg + 1;\n\n        //NEED TO FIX MODBSEARCH\n        if (i === matchIndex) continue;\n\n        if (current === offAmounts[matchIndex]) {\n          recTrans.push([current, offAmounts[matchIndex]]);\n          offAmounts = offAmounts.slice(0, i).concat(offAmounts.slice(i+1, matchIndex)).concat(offAmounts.slice(matchIndex+1)); //adjust for element being removed\n          largestNeg = largestNeg - 1; \n          negOffAmounts = offAmounts.slice(0, largestNeg+1);\n          posOffAmounts = offAmounts.slice(largestNeg+1)\n          i--; \n        }\n      }\n\n\n      // next grab any owed combo with singular excess\n        // if one lessThan acct or one moreThan acct, \n        // else remaining cannot be broken down further (THIS IS ONLY BECAUSE OF THE LIMITED NUM OF ACCTS. If more num of accts, find matching for smallest num of excess summed == smallest num of neg summed.)\n        if (posOffAmounts.length === 1 || negOffAmounts.length === 1) {\n          if (negOffAmounts.length === 1) recTrans.push([Math.abs(negOffAmounts[0]), posOffAmounts]);\n          else recTrans.push([negOffAmounts.map(amt => Math.abs(amt)), posOffAmounts[0]]);\n        } else {\n          recTrans.push([negOffAmounts.map(amt => Math.abs(amt)), posOffAmounts]);\n\n          // let bestNum = negOffAmounts.length;\n          // let bestRec = [];\n          // let bestExcessIdx = offAmounts.length-1;\n          // let bestIndices = []; //for slicing\n\n          // for (let i = offAmounts.length-1; i > largestNeg; i--) {\n          //   sums = {}; //reassign sums for each iteration\n\n          //   _subsetSum(negOffAmounts, offAmounts[i] * -1);\n\n          //   let cost = parseInt(Object.keys(sums)[0]);\n          //   if (bestNum > cost) {\n          //     bestNum = cost;\n          //     bestExcessIdx = i;\n          //     bestIndices = sums[cost].pop(); \n          //   }\n          // }\n\n          // // confirmed, best group is the best of this iteration\n          // if (Object.keys(sums).length) { \n          //   for (let i = bestIndices.length-1; i >= 0; i--) {\n          //     bestRec.push(offAmounts[i]);\n          //     offAmounts = offAmounts.slice(0, i+1).concat(offAmounts.slice(i+1));\n          //   }\n\n          //   bestExcessIdx -= bestIndices.length; //adjust for sliced negs\n          //   recTrans.push([bestRec, offAmounts[bestExcessIdx]]); //can sum for offAmounts[bestExcessIdx], but use index for QA\n          //   offAmounts = offAmounts.slice(0, bestExcessIdx).concat(offAmounts.slice(bestExcessIdx+1));\n          //   largestNeg = largestNeg - bestIndices.length;\n          //   posOffAmounts = offAmounts.slice(largestNeg+1);\n          //   negOffAmounts = offAmounts.slice(0, largestNeg+1);\n          // }\n      }\n\n\n      //transfer to text values\n      let recommendText = [];\n      recTrans.forEach(subArr => {\n        let owed = subArr[0];\n        let excess = subArr[1];\n        if (!(owed instanceof Array) && !(excess instanceof Array)) {\n          recommendText.push(`Transfer $${owed} from ${moreThanRec[excess].pop()} to ${lessThanRec[owed].pop()}.`)\n        }\n        else if (owed instanceof Array && !(excess instanceof Array)) {\n          const singleAcct = moreThanRec[excess].pop();\n          owed.forEach(oweAmt => {\n            recommendText.push(`Transfer $${oweAmt} from ${singleAcct} to ${lessThanRec[oweAmt].pop()}.`);\n          })\n        }\n        else if (!(owed instanceof Array) && excess instanceof Array) {\n          const singleAcct = lessThanRec[owed].pop();\n          excess.forEach(excessAmt => {\n            recommendText.push(`Transfer $${excessAmt} from ${moreThanRec[excessAmt].pop()} to ${singleAcct}.`);\n          })\n        }\n        else { //both arrays\n          let currExcess = excess.pop();\n          let currOwed = owed.pop();\n\n          let currExcessAcct = moreThanRec[currExcess].pop();\n          let currOwedAcct = lessThanRec[currOwed].pop();\n\n          while (currExcess || currOwed) {\n            let deduct = Math.min(currExcess, currOwed);\n            recommendText.push(`Transfer $${deduct} from ${currExcessAcct} to ${currOwedAcct}.`);\n\n            currExcess = Math.floor((currExcess - deduct) * 1000)/1000;\n            currOwed = Math.floor((currOwed - deduct) * 1000)/1000;\n\n            if (currExcess) {\n              currOwed = owed.pop();\n              currOwedAcct = lessThanRec[currOwed].pop();\n            } else if (currOwed) {\n              currExcess = excess.pop();\n              currExcessAcct = moreThanRec[currExcess].pop();\n            } else break; //unnecessary break\n          }\n        }\n      })\n\n      setRecTransfers(recommendText);\n\n    }\n    else console.log(\"Review Errors\")\n  }\n\n  return (\n    \n    <div className=\"personalize-main-div\">\n      <div className=\"user-img\"></div>\n\n      <h1>Personalize Your Portfolio</h1>\n\n      <div className=\"personalize-div-wrapper\">\n        <div className=\"personalize-right\">\n          <section className=\"risk-section\">\n            { currPlan ? (\n              <div>\n                <h4 id=\"risk-section-header\">Risk Level {currPlan['Risk']}</h4>\n                { headers.map(ctg => (\n                  <div key={ctg}>\n                    <span>{ctg}</span>\n                    <span>{currPlan[ctg]}%</span>\n                  </div>\n                )) }\n              </div>\n            ) : <Link to=\"/plans\">Choose a plan that's right for you!</Link> }\n          </section>\n\n          { recTransfers.length ? (\n            <div className=\"recommended-trans-div\">\n              <h3>Recommended Transfers: </h3>\n              { recTransfers.map((text, idx) => (\n                  <p key={`text-${idx}`}>- {text}</p>\n              ))}\n            </div>\n          ) : null }\n        </div>\n\n        <div className=\"personalize-left\">\n          <div className=\"personalize-risk-section\">\n            <h3>Tell us about your current portfolio: </h3>\n            <form onSubmit={calculate}>\n              { headers.map(ctg => {\n                let recDiff;\n                let color; \n                let arrow; \n                let ctgErr = inputErrors[ctg] ? `${ctg}-input-errors` : \"\";\n                \n                if (Object.keys(recPortfolio).length) {\n                  recDiff = (recPortfolio[ctg] - userPortfolio[ctg]) ? recPortfolio[ctg] - userPortfolio[ctg] : null;\n                  color = recDiff > 0 ? \"green\" : \"red\";\n                  arrow = recDiff > 0 ? <i className=\"fas fa-arrow-up\"></i> : <i className=\"fas fa-arrow-down\"></i>;\n                }\n                return (\n                  <div key={ctg} className={`${ctg}-div personalize-input-div`}>\n                    <label htmlFor={ctg}>{ctg}</label>\n                    <input type=\"text\" \n                      onChange={updateAmount(ctg)}\n                      className={ctgErr}\n                    />\n                    { recDiff || recDiff === 0 ? <span className={`rec-${color}`}>{arrow} $ {Math.abs(recDiff).toFixed(2)}</span> : null }\n                  </div>\n                )\n              }) }\n\n              <button>Calculate My Plan!</button>\n            </form>\n            \n          </div>\n          { Object.keys(recPortfolio).length ? (\n\n            <div className=\"recommended-plan-div\">\n              <h3>Recommended Plan</h3>\n              {headers.map((ctg, idx) => {\n                return (\n                  <div key={`${ctg}-${idx}`}>\n                    <span>{ctg}:</span>\n                    <span>$ {recPortfolio[ctg]}</span>\n                  </div>\n                )\n              })}\n            </div>\n\n          ) : null }\n\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default UserInfo;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Nav from './components/Navbar';\nimport Splash from './components/Splash.js';\nimport PlansMain from './components/PlansMain';\nimport UserCurrent from './components/UserCurrent';\n\nimport './stylesheets/mobile.css';\n\nfunction App() {\n  return (\n    <div>\n      <Nav/>\n      <Switch>\n        <Route exact path=\"/plans\" component={PlansMain}/>\n        <Route exact path=\"/personalize\" component={UserCurrent}/>\n        <Route path=\"/\" component={Splash}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from '../App';\n\nconst Root = ({store}) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n)\n\nexport default Root;","import { RECEIVE_PORTFOLIO } from '../actions/portfolio_actions';\n\nconst portfoliosReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_PORTFOLIO: \n      return Object.assign({}, state, action.portfolio);\n    default:\n      return state;\n  }\n\n}\n\nexport default portfoliosReducer;","import { RECEIVE_PLAN, RECEIVE_PLANS, UNSELECT_PLAN, CLEAR_PLANS } from '../actions/plan_actions';\n\nconst plansReducer = (state = [], action) => {\n  Object.freeze(state);\n  let newState;\n\n  switch (action.type) {\n    case RECEIVE_PLAN: \n      newState = [action.plan]\n      return newState;\n    // case RECEIVE_PLANS: \n    //   newState = Object.assign([], state);\n    //   newState.push(action.plan)\n    //   return newState;\n    case UNSELECT_PLAN:\n      return state.filter(plans => plans === action.plan);\n    case CLEAR_PLANS:\n      return [];\n    default:\n      return state;\n  }\n\n}\n\nexport default plansReducer;","import { combineReducers } from 'redux';\n\nimport portfoliosReducer from './portfolios_reducer';\nimport plansReducer from './plans_reducer';\n\nconst entitiesReducer = combineReducers({\n  portfolios: portfoliosReducer,\n  plans: plansReducer,\n})\n\nexport default entitiesReducer;","import { combineReducers } from 'redux';\nimport entitiesReducer from './entities_reducer';\n\nconst rootReducer = combineReducers({\n  entities: entitiesReducer,\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst middlewares = [thunk];\n\n// if (process.env.NODE_ENV !== \"production\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n// }\n\nconst configureStore = (preloadedState = {}) => createStore(rootReducer, preloadedState, applyMiddleware(...middlewares));\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root';\nimport configureStore from './store/store.js';\n\nconst store = configureStore({});\n\nReactDOM.render(<Root store={store}/>, document.getElementById('root'));"],"sourceRoot":""}